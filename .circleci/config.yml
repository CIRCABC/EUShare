version: 2.1 # use CircleCI 2.1
jobs: 
  build_backend:
    # see https://circleci.com/docs/2.0/language-java/
    working_directory: ~/EasyShare # directory where steps will run

    docker:
      - image: circleci/openjdk:11-jdk-browsers 

    steps: 

      - checkout: 
          path: ~/EasyShare # check out source code to working directory

      - restore_cache: 
          # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: Server-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline # gets the project dependencies
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: Server-{{ checksum "pom.xml" }}
      - run: mvn clean install -Dskip.unit.tests=true -Dskip.integration.tests=false -X
      - run: mvn clean install 
      
      - store_test_results: 
      # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports
      
      - store_artifacts: 
      # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/easyshareserver.war
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples 
      
      - run:
          name: Install Sonarqube scanner
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
            unzip sonar-scanner-cli-4.6.2.2472-linux.zip
      - run:
          name: Run Sonarqube scanner
          command: |
            export SONAR_SCANNER_OPTS="-Xmx2048m"
            eval ./sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner -Dsonar.projectKey=CIRCABC_EasyShare -Dsonar.sources=server/src -Dsonar.sourceEncoding=UTF-8 -Dsonar.organization=circabc -Dsonar.exclusions=server/**/resources/** -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectVersion=${CIRCLE_BRANCH} -Dsonar.login=${SONARQUBE_BACKEND_TOKEN} -Dsonar.java.binaries=server/target/classes/ -Dsonar.coverage.jacoco.xmlReportPaths=server/target/site/jacoco-ut/jacoco.xml 
  build_frontend:
    # see https://circleci.com/docs/2.0/language-javascript/
    # see https://circleci.com/docs/2.0/circleci-images/#nodejs
    working_directory: ~/EasyShare/client/angular
    docker: # run the steps with Docker
      - image: circleci/node:12.22.5  
    steps: 
      - checkout: 
          path: ~/EasyShare # check out source code to working directory    
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: build-app
          command: npm run build
      - run:
          name: check-license
          command: npm run licchkchk
      - run:
          name: check-style
          command: npm run lint
      - run:
          name: Install Sonarqube scanner
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
            unzip sonar-scanner-cli-4.6.2.2472-linux.zip
      - run:
          name: Run Sonarqube scanner
          command: |
            export SONAR_SCANNER_OPTS="-Xmx2048m"
            eval ./sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner -Dsonar.projectKey=EASYSHARE_FRONT -Dsonar.sources=. -Dsonar.sourceEncoding=UTF-8 -Dsonar.organization=circabc -Dsonar.exclusions=**/assets/**,**/sonar-scanner-4.6.2.2472-linux/** -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectVersion=${CIRCLE_BRANCH} -Dsonar.login=${SONARQUBE_FRONTEND_TOKEN}
workflows:
  version: 2.1
  build_backend_and_frontend:
    jobs:
      - build_backend
      - build_frontend